#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##
## PostgresSql Database
##

apiVersion: skupperx.io/compose/v1alpha1
kind: Block
metadata:
  name: postgres-balanced
type: skupperx.io/connector
spec:
  inherit:
    base: library/tcp-selector-with-policy
    transformOverwrite:
      keyPrefix: postgres
      protocol: postgres

---
apiVersion: skupperx.io/compose/v1alpha1
kind: Block
metadata:
  name: postgresql
type: skupperx.io/component
spec:
  config:
    selectorKey: block
    selectorValue: postgresql
    POSTGRES_DB: database
    POSTGRES_USER: access
    POSTGRES_PASSWORD: demopass
    imageVersion: 15
  interfaces:
  - name: postgres
    blockType: postgres-balanced
    role: accept
    maxBindings: unlimited
    port: 5432
  - name: files
    blockType: postgres-volume
    role: mount
    volumeSize: 5Gi
  body:
    kubeTemplates:
    - template:
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: postgres-${ident}
        spec:
          replicas: 1
          selector:
            matchLabels:
              ${selectorKey}: ${selectorValue}
          template:
            metadata:
              labels:
                ${selectorKey}: ${selectorValue}
            spec:
              containers:
              - name: postgres
                image: postgres:${imageVersion}
                imagePullPolicy: "IfNotPresent"
                ports:
                - containerPort: ${localif.postgres:port}
                env:
                - name: POSTGRES_DB
                  value: ${POSTGRES_DB}
                - name: POSTGRES_USER
                  value: ${POSTGRES_USER}
                - name: POSTGRES_PASSWORD
                  value: ${POSTGRES_PASSWORD}
                volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: postgresdb
              volumes:
              - name: postgresdb
                emptyDir:
                  sizeLimit: ${localif.files:volumeSize}

---
apiVersion: skupperx.io/compose/v1alpha1
kind: Block
metadata:
  name: postgres-volume
type: skupperx.io/connector
spec:
  config:
    storageClass: ibmc-vpc-block-10iops-tier
    accessModes: ReadWriteMany
    capacity: 5Gi
  interfaces:
  - name: mountpoint
    role: mount
  body:
    kubeTemplates:
    - affinity: mountpoint
      template:
      - apiVersion: v1
        kind: PersistentVolume
        metadata:
          name: postgres-pv-${ident}
        spec:
          storageClassName: ${storageClass}
          capacity:
            storage: ${capacity}
          accessModes:
          - ${accessModes}
          hostPath:
            path: "/mnt/data"
      - apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: postgres-pvc-${ident}
        spec:
          storageClassName: ${storageClass}
          accessModes:
          - ${accessModes}
          resources:
            requests:
              storage: ${peerif:volumeSize}

---
apiVersion: skupperx.io/compose/v1alpha1
kind: Block
metadata:
  name: postgres-subsystem
type: skupperx.io/component
spec:
  interfaces:
  - name: postgres
    blockType: postgres-balanced
    role: accept
  body:
    composite:
      blocks:
      - name: database
        block: postgresql
        siteClasses:
        - hq
        bindings:
        - interface: postgres
          super: postgres
      - name: store
        block: postgres-volume
        bindings:
        - interface: mountpoint
          block: database
          blockInterface: files
